|#
Exercise 1.3.  Define a procedure that takes three numbers
as argumentsand returns the sum of the squares of the two
larger numbers
|#

(define (square x)
  (* x x))


(define (sumSquare x y)
  (+ (square x)
     (square y))) 


(define (mmaxThree a b c)
  (cond ((< a b c) (sumSquare b c))
        ((< b a c) (sumSquare a c))
        ((< c a b) (sumSquare a b))))


(mmaxThree 1 2 3)